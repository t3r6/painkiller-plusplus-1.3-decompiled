o.Mesh = "pSphereShape1"
o.Pack = "meteor_caly.dat"

o.Mass = 10
o.DestroyPack = "meteor_zlom.dat"
o.Destroy.ExplosionStrength = 3200

o.Destroy.Strength = 100
o.Destroy.ExplosionStrength = 2000
o.Destroy.ExplosionDamage = 100
o.Destroy.ExplosionRadius = 6
o.Health = 1
o.Destroy.AverageDelay = 0.0
o.Destroy.AverageVariation = 0
o.Destroy.MinSpeedOnCollision = 10
o.Destroy.LifetimeAfterExplosion = 1.5

o.Scale = 0.4
o.Pos = Vector:New(0,0,-4)
o.Restitution = 0.2
o.speed = 100
o._fx = 'nun_spell'
o.TimeToLive = 30 * 30
o.earthqRange = 80
o.earthqTime = 16
o.earthqStren = 0.5
o.soundBindPosY = 0
o.NotCountable = true

--o.CollisionSound = {"impacts/stonebig-impact1","impacts/stonebig-impact2","impacts/stonebig-impact3","impacts/stonebig-impact4","impacts/stonebig-impact5"}
o.explSound = "actor/giant/meteor-blow"
--============================================================================
function GStone:OnCollision(x,y,z,nx,ny,nz,e)
	if e then
		local obj = EntityToObject[e]
		if obj and obj._Class ~= "CItem" then
		else
			--if y < 10 then
				--local name = self.CollisionSound[math.random(1,table.getn(self.CollisionSound))]
				--PlaySound3D(name, x,y,z, 30, 100)
				PlaySound3D("weapons/machinegun/rocket_hit", x,y,z, 30, 120)
			--end
		end
	end
	ENTITY.EnableCollisions(self._Entity, false)
	ENTITY.PO_Enable(self._Entity, false)
	self:OnDamage(99999, self)
	Game._EarthQuakeProc:Add(x,y,z, self.earthqTime, self.earthqRange, self.earthqStren,  self.earthqStren, 1.0)
	
	WORLD.Explosion2(x,y,z, 1000,6, nil, AttackTypes.Rocket, FRand(50,100))

	SOUND.Play3D(self.explSound,x,y,z,30,160)
end
--============================================================================
function GStone:OnCreateEntity()
	self:PO_Create(BodyTypes.FromMeshSweep, nil, ECollisionGroups.Noncolliding)
	self.timer = 5
	self.mode = 0
	self.heig = FRand(250, 400)
end
--============================================================================
function GStone:OnUpdate()
	if self.mode == 0 then
		if self.Pos.Y > self.heig then
			self.mode = 1
            return
		end
	end
	if self.mode == 1 then
		local v = Vector:New(Player._groundx - self.Pos.X+FRand(-20.0,20.0), Player._groundy+FRand(1.0,2.0) - self.Pos.Y, Player._groundz - self.Pos.Z+FRand(-20.0,20.0))
		v:Normalize()
		local rnd = FRand(0.7, 1.0)
		ENTITY.SetVelocity(self._Entity,  v.X * self.speed * rnd, v.Y * self.speed * rnd, v.Z * self.speed * rnd)
		ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.InsideItems)
		ENTITY.EnableCollisions(self._Entity, true, 0.3, 8, 0.3)
		self.mode = 2
		self:BindFX(self._fx, nil, -1)
	end
	if self.mode == 4 then
		if self.timer > 0 then
			self.timer = self.timer - 1
			return
		end
		local v = Vector:New(0.1, -1.0, 0.1)
		v:Normalize()
		local rnd = FRand(0.8, 1.3)
		ENTITY.SetVelocity(self._Entity,  v.X * self.speed * rnd, v.Y * self.speed * rnd, v.Z * self.speed * rnd)
		ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.InsideItems)
		ENTITY.EnableCollisions(self._Entity, true, 0.3, 8, 0.3)
		self.mode = 2
		self:BindFX(self._fx, nil, -1)
	end
	if self.mode == 2 then
		if self.Pos.Y < self.soundBindPosY then
			self:BindSound("actor/giant/meteor-fall"..math.random(1,3),100,400,false)
			self.mode = 3
		end
	end
end
