o.Explosion = {
	ExplosionStrength = 200,
	ExplosionRange = 1.5,
	Damage = 5,
}


ClownHood.Mesh = "pSphereShape1"
ClownHood.Pack = "kamyk.dat"

ClownHood.Scale = 0.06
ClownHood.Restitution = 0.8 -- sprezystosc
ClownHood.LinearDamping = 0.2  -- tlumienie liniowe


o.TimeToLive = 40
ClownHood.Mass = 40

function ClownHood:OnPrecache()
    Cache:PrecacheParticleFX("clownhoodexplo")
end

function ClownHood:OnCreateEntity()
	self:PO_Create(BodyTypes.Simple,0.2,ECollisionGroups.Particles)
	ENTITY.EnableCollisions(self._Entity, true)
    ENTITY.RemoveFromIntersectionSolver(self._Entity)

   	local angle = math.random(0,360)
	local x = math.sin(angle) + math.cos(angle)
	local z = math.cos(angle) - math.sin(angle)
	local y = math.random(60,80)* 0.01
	local force = FRand(9, 16) * FRand(8, 17)
	
	ENTITY.PO_Hit(self._Entity,self.Pos.X,self.Pos.Y,self.Pos.Z,x * force,y * force,z * force)
    ENTITY.PO_SetMovedByExplosions(self._Entity, false)

    self.OnDamage = nil
end

function ClownHood:OnUpdate()
    if math.random(100) < 5 then
		if self.pfx then
			--Game:Print("ClownHood - jeszcze leci")
			local x,y,z,m = ENTITY.GetVelocity(self._Entity)
			if m < 0.2 and y < 0.1 then
				--ENTITY.Release(self.pfx)
			    ENTITY.PO_Enable(self._Entity, false)
				ENTITY.SetVelocity(self._Entity, 0,0,0)
				--Game:Print("ma mala predkosc wiec go usuwam")
				--self.pfx = nil
			end
		end
    end
end


function o:OnCollision(x,y,z,nx,ny,nz,e)
    ENTITY.PO_Enable(self._Entity, false)
	ENTITY.SetVelocity(self._Entity, 0,0,0)
	self.Pos.X = x
	self.Pos.Y = y
	self.Pos.Z = z
end



function ClownHood:OnRelease()
	if self._soundSample then
		SOUND3D.Stop(self._soundSample)
	end
	local x,y,z = self.Pos.X,self.Pos.Y,self.Pos.Z
	WORLD.Explosion2(x,y,z, self.Explosion.ExplosionStrength,self.Explosion.ExplosionRange,nil,AttackTypes.Rocket,self.Explosion.Damage)
	PlaySound3D("actor/clown/clown-kapiszon"..math.random(1,3),x,y,z,20,50)
	AddPFX("clownhoodexplo",0.2,self.Pos)
end
