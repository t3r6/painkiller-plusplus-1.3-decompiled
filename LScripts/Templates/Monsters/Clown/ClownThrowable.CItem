ClownThrowable.Mesh = "kulkaaShape"
ClownThrowable.Pack = "kulka.dat"


ClownThrowable.Health = 22
ClownThrowable.Scale = 0.2
ClownThrowable.Restitution = 0.0 	-- sprezystosc
ClownThrowable.LinearDamping = 0.0
ClownThrowable.AngularDamping = 0.9
ClownThrowable.TimeToLive = 15 * 30

o.Mass = 150
o.damageDirectHit = 10

o.hoodElements = 6


function o:OnPrecache()
    Cache:PrecacheItem("ClownHood.CItem")
    Cache:PrecacheSounds("actor/clown/clown-explodemissile")
end

function ClownThrowable:OnCreateEntity()
	self:PO_Create(BodyTypes.FromMesh,nil,ECollisionGroups.Noncolliding)
	self.timer = 4
    ENTITY.PO_EnableGravity(self._Entity,false)
end

function ClownThrowable:OnDamage()
	self._damaged = true
end

function o:OnUpdate()
	if self.timer then
		self.timer = self.timer - 1
		if self.timer < 0 then
			--Game:Print("MOLOTOW enable col")
			ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.HCGNormalNCWithSelf)
			ENTITY.EnableCollisions(self._Entity, true)
			self.timer = nil
		end
	end
end

function o:OnCollision(x,y,z,nx,ny,nz,e)
    local obj = EntityToObject[e]
	if obj and obj ~= self.ObjOwner then
		if obj.OnDamage then
			obj:OnDamage(self.damageDirectHit, self.ObjOwner)
        end
        if obj._Class == "CPlayer" and not self.ObjOwner._playSndCol then
            PlaySound2D("actor/clown/clown-kapiszon"..math.random(1,3))
            self.ObjOwner._playSndCol = true
        end
    else
        PlaySound3D("actor/clown/clown-explodemissile",x,y,z,12,40)
    end


    local amount = self.hoodElements
    for i=1,amount do
        local obj = GObjects:Add(TempObjName(),CloneTemplate("ClownHood.CItem"))
        obj.ObjOwner = self.ObjOwner
        obj.Pos.X = x + nx * 0.5 + FRand(-0.5, 0.5)
        obj.Pos.Y = y + ny * 0.5 + i*0.05
        obj.Pos.Z = z + nz * 0.5 + FRand(-0.5, 0.5)

        --table.insert(self.ObjOwner.debugHIT, {obj.Pos.X, obj.Pos.Y, obj.Pos.Z})
        
        if i == amount then
            obj.TimeToLive = obj.TimeToLive * 1.2
            obj.sound = "impacts/barrel-wood-fire-loop"
        else
            obj.sound = nil
            obj.TimeToLive = FRand(obj.TimeToLive * 0.8, obj.TimeToLive * 1.1)
        end
        obj:Apply()
        obj:Synchronize()
    end
    ENTITY.EnableCollisions(self._Entity, false)
    GObjects:ToKill(self)
end
