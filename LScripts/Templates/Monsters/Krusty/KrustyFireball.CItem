KrustyFireball.Mesh = "pSphereShape1"
KrustyFireball.Pack = "kamyk.dat"

o.Health = 1

KrustyFireball.Scale = 0.5
KrustyFireball.Restitution = 0.8 	-- sprezystosc
KrustyFireball.LinearDamping = 0.0  -- tlumienie liniowe
KrustyFireball.TimeToLive = 30 * 12

o.fx = 'nun_spell'


o.Explosion = {
	stren = 400,
	range = 6,
	damage = 10,
}

function KrustyFireball:OnPrecache()
    Cache:PrecacheParticleFX(self.fx)
end

function KrustyFireball:OnCreateEntity()
    local pfx = AddPFX(self.fx,0.15)
    ENTITY.RegisterChild(self._Entity,pfx)
    ENTITY.EnableDraw(self._Entity,false)

	self:PO_Create(BodyTypes.Simple,nil,ECollisionGroups.Noncolliding)
	ENTITY.PO_EnableGravity(self._Entity,false)
	self.timer = 4
	self:BindSound("actor/samurai/samurai-Fireball",4,28,false)			
end


function KrustyFireball:OnUpdate()
	if self.timer then
		self.timer = self.timer - 1
		if self.timer < 0 then
			self.timer = nil
			ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.HCGNormalNCWithSelf)
			ENTITY.AddToIntersectionSolver(self._Entity)
			ENTITY.EnableCollisions(self._Entity, true)
			
		end 
	else
        local x2,y2,z2 = self.Pos.X, self.Pos.Y, self.Pos.Z
        if self._target then
            local x1,y1,z1 = self._target.Pos.X, self._target.Pos.Y + 1.3, self._target.Pos.Z
            local dist = Dist3D(x1,y1,z1, x2,y2,z2)
            if dist < 2.0 then
                --Game:Print("blisko")
                self:OnCollision(x2,y2,z2)
                return
            end
        end

        if self._target and self._target.Health > 0 and self.ObjOwner.AiParams.homingMissile then
			if math.random(100) < 33 then
				local ownerAI = self.ObjOwner.AiParams
				--local x,y,z = ENTITY.GetVelocity(self._Entity)
				--local oldV = Vector:New(x,y,z)
				--oldV:Normalize()
                local x1,y1,z1 = self._target.Pos.X, self._target.Pos.Y + 1.3, self._target.Pos.Z
				
				local v = Vector:New(x2 - x1, y2 - y1, z2 - z1)
				v:Normalize()
				
				local angle = math.atan2(v.X, v.Z)
				local pitch =  math.atan2(y1 - y2, math.sqrt((x1 - x2)*(x1 - x2)+(z1 - z2)*(z1 - z2)))
				if self._lastAngle then
				
					local aa = AngDist(self._lastAngle, angle)
					local ap = AngDist(self._lastPitch, pitch)
					if (aa*180/math.pi > ownerAI.homingMissileAngleChangeSpeed) then
						angle = self._lastAngle + ownerAI.homingMissileAngleChangeSpeed*math.pi/180
					elseif (aa*180/math.pi < -ownerAI.homingMissileAngleChangeSpeed) then
						angle = self._lastAngle - ownerAI.homingMissileAngleChangeSpeed*math.pi/180
					end

					if (ap*180/math.pi > ownerAI.homingMissileAngleChangeSpeed) then
						pitch = self._lastPitch + ownerAI.homingMissileAngleChangeSpeed*math.pi/180
					elseif (ap*180/math.pi < -ownerAI.homingMissileAngleChangeSpeed) then
						pitch = self._lastPitch - ownerAI.homingMissileAngleChangeSpeed*math.pi/180
					end

						
					--Game:Print(angle*180/math.pi.." "..pitch*180/math.pi)
					--Game:Print(aa*180/math.pi.." "..ap*180/math.pi)
					
					v.X,v.Y,v.Z = VectorRotate(1.0,0,0, 0, 0, pitch)
					v.X,v.Y,v.Z = VectorRotate(v.X,v.Y,v.Z, 0, -angle+math.pi/2, 0)
					
					v:MulByFloat(ownerAI.throwVelocity)
					ENTITY.SetVelocity(self._Entity, -v.X, -v.Y, -v.Z)
				end
				
				self._lastAngle = angle
				self._lastPitch = pitch
			end
		end
	end
end

function KrustyFireball:OnDamage()
    local x2,y2,z2 = self.Pos.X, self.Pos.Y, self.Pos.Z
    self:OnCollision(x2,y2,z2)
end

function KrustyFireball:OnCollision(x,y,z,nx,ny,nz,e)
    local obj = EntityToObject[e]
    if obj == self then
        Game:Print("KrustyFireball:OnCollision self")
        return
    end
    PlaySound3D("actor/samurai/samurai-Fireball-hit",x,y,z)
    ENTITY.PO_Enable(self._Entity, false)
	local ex = self.Explosion
    if self.ObjOwner then
        WORLD.Explosion2(x,y,z, ex.stren, ex.range, self.ObjOwner._Entity, AttackTypes.Rocket, ex.damage)
    else
        WORLD.Explosion2(x,y,z, ex.stren, ex.range, nil, AttackTypes.Rocket, ex.damage)
    end
	GObjects:ToKill(self)
end
